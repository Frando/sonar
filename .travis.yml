# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - PROJECT_NAME=sonar
    - BINARY_NAME=sonar-search

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    # - env: TARGET=aarch64-unknown-linux-gnu
    # - env: TARGET=i686-unknown-linux-gnu
    # - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    # - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    # - env: TARGET=i686-apple-darwin
    #   os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # Windows
    # - env: TARGET=x86_64-pc-windows-gnu

    # Testing other channels
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: nightly
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: gcy1dK1ZPjabLel9RyMP3Vt2rqgDeNa/9+0bSU0JQvGIuYzByXHn8Kk2l2k/XTPSVbK49/upq8dAcJ77nCgxI5/7StRPc3+pUad5jGffYHBo9xEADVpj8fvdQbeHev5DoFEwXa4t08mJAuzYuWgPf5nngxLAKLEkbXen6DYYXYplPEnnmYBMIiqsYjx4tJASvDLujxe0bqEI9UGK72+szdAtbm0CvbDBY37iJBf/hcNjbNnYH0xQjjwQuBWxMhYgBo3Hz1m8NfxFZK959xhoNKRk2370DwHxjAafAUGjJ5d44mNqK9FmrYAKZ9B/sHdTmz8LH3Ozq5oP6m3LkwNcEtitza2SFhsol7s1JVgEMIW6XbEQY+v7xccDtnJZA9iRKdPyal80F0pTwnkp+bOO0MpCWfjZCf7vG4ZRLFGkpUHW5Dl5Ir/zcjoDSloIfO5mR0sWxYRzyNHdF9IpUAimSlKcTGd6ULRCsir9uZ+/jqPXEZSxWW7mGHDRI4xyw+kTEDd37OPjEf4PXbGGH+CZTWQPPV8XbaA5WK4bbTFOIQ6Mhrwkwpm7L9oZzQsrzKRhfTI0Kj2hrMIsxkmbsi3cRUkj7G8uYCCviRARi4ZqaHGYekdK/Vjm50coXiCkNjSgF2TFfjOCbU1f2RsnkH3IOU0RFCga2/1/lFgMNL6fdGw=
  file_glob: true
  file: $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
