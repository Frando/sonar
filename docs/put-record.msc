msc {
  arcgradient = 8;
  client,collection,kappacore,sparseindex,FeedA, viewkv;
  |||;
  collection abox collection[label="Collection.put\n(type AND id AND value)"];
  collection abox collection[label="Collection.view.kv.getLinks(record)"];
  collection -> viewkv[label="getLinks(record)"];
  viewkv >> collection[label="[keyseq]"];
  collection rbox collection[label="record.links:= [keyseq]"];
  collection rbox collection[label="blocks = [encode(record)]"];
  collection rbox collection[label="feed = collection._findFeed"];
  collection abox collection[label="feed is writable"];
  collection -> FeedA[label="feed.append(binary blocks)"];
  FeedA -> sparseindex[label="emit append"];
  sparseindex rbox sparseindex[label="append keyseq to collection log"];
  sparseindex -> kappacore[label="update()"];
  kappacore -> sparseindex[label="pull(lasthead)"];
  kappacore <- sparseindex[label="[keyseq]"];
  kappacore -> collection[label="getBlock(keyseq)"];
  collection -> FeedA[label="get(seq)"];
  FeedA -> collection[label="binary block"];
  collection rbox collection[label="record = decode(buf)"];
  collection -> kappacore[label="record"];
  kappacore -> viewkv[label="map([records])"];
  viewkv rbox viewkv[label="update indexes with records"];
  viewkv -> kappacore[label="success"];
}